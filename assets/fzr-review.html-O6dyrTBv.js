import{_ as d,c as o,b as r,a as e,d as a,w as i,r as t,o as p,e as l}from"./app-dfCIEjaq.js";const c={},v={class:"table-of-contents"};function D(u,n){const s=t("router-link");return p(),o("div",null,[n[5]||(n[5]=r('<h1 id="заметки-по-поводу-схемы-фзр" tabindex="-1"><a class="header-anchor" href="#заметки-по-поводу-схемы-фзр"><span>Заметки по поводу схемы ФЗР</span></a></h1><p>Схема базы данных Фроша-Загорского-Радкевичюте (ФЗР-схема) разработана с целью упростить коллективную международную работу над текстами, в первую очередь способствующими развитию теоретического мышления. Детальное описание схемы находится в следующих статьях:</p><ul><li><p><a href="https://comtext.space/%D0%BE_%D0%B2%D0%BE%D1%81%D0%BF%D0%B8%D1%82%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE%D0%BC_%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B8_%D1%82%D0%B5%D0%BA%D1%81%D1%82%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B9_%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%8B.html" target="_blank" rel="noopener noreferrer">О воспитательном значении текстологической работы</a></p></li><li><p><a href="https://comtext.space/%D1%87%D1%82%D0%BE_%D0%BD%D0%B5_%D1%82%D0%B0%D0%BA_%D1%81_%D1%82%D0%B5%D0%BA%D1%81%D1%82%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D0%B5%D0%B9_%D0%B8_%D0%BA%D0%B0%D0%BA_%D0%B8%D1%81%D0%BF%D1%80%D0%B0%D0%B2%D0%B8%D1%82%D1%8C_%D1%81%D0%B8%D1%82%D1%83%D0%B0%D1%86%D0%B8%D1%8E.html" target="_blank" rel="noopener noreferrer">Что не так с текстологией и как исправить ситуацию</a></p></li><li><p><a href="https://research.comtext.space/%D1%82%D0%B5%D1%85%D0%BD%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5-%D0%B0%D1%81%D0%BF%D0%B5%D0%BA%D1%82%D1%8B-%D1%82%D0%B5%D0%BA%D1%81%D1%82%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D0%B8.html" target="_blank" rel="noopener noreferrer">Технические аспекты цифровой текстологии</a></p></li></ul><p>Сама схема, комментарии к которой описаны ниже, находится в <a href="https://github.com/comtextspace/textology_scheme/blob/master/init_db.sql" target="_blank" rel="noopener noreferrer">этом репозитории</a>. Надеемся, что следующие размышления могут быть полезны, для поиска путей развития ФЗР-схемы.</p>',4)),e("nav",v,[e("ul",null,[e("li",null,[a(s,{to:"#_1-стандарты-оформления-схемы-базы-данных"},{default:i(()=>n[0]||(n[0]=[l("1. Стандарты оформления схемы базы данных")])),_:1})]),e("li",null,[a(s,{to:"#_2-использование-идентификаторов-из-wikidata"},{default:i(()=>n[1]||(n[1]=[l("2. Использование идентификаторов из Wikidata")])),_:1})]),e("li",null,[a(s,{to:"#_3-использование-html-и-css"},{default:i(()=>n[2]||(n[2]=[l("3. Использование html и css")])),_:1})]),e("li",null,[a(s,{to:"#_4-версионирование-параграфов"},{default:i(()=>n[3]||(n[3]=[l("4. Версионирование параграфов")])),_:1})]),e("li",null,[a(s,{to:"#_5-структура-текста"},{default:i(()=>n[4]||(n[4]=[l("5. Структура текста")])),_:1})])])]),n[6]||(n[6]=r(`<h2 id="_1-стандарты-оформления-схемы-базы-данных" tabindex="-1"><a class="header-anchor" href="#_1-стандарты-оформления-схемы-базы-данных"><span>1. Стандарты оформления схемы базы данных</span></a></h2><p>Для удобства разработки и использования базы данных применяются соглашение о форматировании кода и соглашение о именовании объектов. Стандарты упрощают понимание кода, так как код становится унифицирован. В некоторых случаях есть общепринятые стандарты, в других стандарт вырабатывается проектом или группой разработчиков.</p><p>В качестве стандарта наименований для ФЗР предлагаем следующее:</p><p>1. Название всех объектов базы данных дается на Эсперанто.</p><p>2. Для идентификаторов используется стиль <code>upper_snake_case</code>: все символы в нижнем регистре, для разделителей используется символ подчеркивания <code>_</code>.</p><p>Такой подход позволит избавится от кавычек в коде приложения и скриптах.</p><p>Пример, сейчас таблица создается так:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">CREATE TABLE Lingvoj</span>
<span class="line">(</span>
<span class="line">    ISO 639-3      char(3) PRIMARY KEY,</span>
<span class="line">    Nomo originala text NOT NULL,</span>
<span class="line">    Nomo           text,</span>
<span class="line">    Familio        int  NOT NULL,</span>
<span class="line">    ISO 639-1      char(2),</span>
<span class="line">    CONSTRAINT Lingvoj_Lingva_familioj_FK FOREIGN KEY (Familio) REFERENCES Lingva familioj (Kodo)</span>
<span class="line">);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>А так в соответствии с этим правилом:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">CREATE TABLE lingvoj</span>
<span class="line">(</span>
<span class="line">    iso_639_3      char(3) PRIMARY KEY,</span>
<span class="line">    nomo_originala text NOT NULL,</span>
<span class="line">    nomo           text,</span>
<span class="line">    familio        int  NOT NULL,</span>
<span class="line">    iso_639_1      char(2),</span>
<span class="line">    CONSTRAINT lingvoj_lingva_familioj_fk FOREIGN KEY (familio) REFERENCES lingva_familioj (Kodo)</span>
<span class="line">);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3. Все названия должны быть в единственном числе. Это правило связано, с тем, что оно может облегчить чтение схемы на малознакомом языке. Для удобства ввода и программирования будет очень полезно исключить пробелы из названий, как следствие не нужно будет использовать кавычки в названиях.</p><p>Пример, сейчас таблица создается так:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">CREATE TABLE Libroj - nomoj</span>
<span class="line">(</span>
<span class="line">    Libro  uuid        NOT NULL,</span>
<span class="line">    Lingvo varchar(3)  NOT NULL,</span>
<span class="line">    Nomo   text        NOT NULL,</span>
<span class="line">    Uzanto varchar(64) NOT NULL DEFAULT user,</span>
<span class="line">    Tempo  timestamptz NOT NULL DEFAULT now(),</span>
<span class="line">    CONSTRAINT Libroj_nomoj_pk PRIMARY KEY (Libro, Lingvo),</span>
<span class="line">    CONSTRAINT Libroj_nomoj_Libroj_FK FOREIGN KEY (Libro) REFERENCES Libroj (Kodo),</span>
<span class="line">    CONSTRAINT Libroj_nomoj_Lingvoj_FK FOREIGN KEY (Lingvo) REFERENCES Lingvoj (ISO 639-3)</span>
<span class="line">);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>А так в соответствии с этим правилом:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">CREATE TABLE libro_nomo</span>
<span class="line">(</span>
<span class="line">    libro  uuid        NOT NULL,</span>
<span class="line">    lingvo varchar(3)  NOT NULL,</span>
<span class="line">    nomo   text        NOT NULL,</span>
<span class="line">    uzanto varchar(64) NOT NULL DEFAULT user,</span>
<span class="line">    tempo  timestamptz NOT NULL DEFAULT now(),</span>
<span class="line">    CONSTRAINT libro_nomo_pk PRIMARY KEY (libro, lingvo),</span>
<span class="line">    CONSTRAINT libro_nomo_libroj_fk FOREIGN KEY (libro) REFERENCES libro (kodo),</span>
<span class="line">    CONSTRAINT libro_nomo_lingvoj_fk FOREIGN KEY (lingvo) REFERENCES lingvo (iso_639_3)</span>
<span class="line">);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4. Именование первичных и внешних ключей должно подчинятся следующим правилам:</p><ul><li>Первичные ключи — [название таблицы]_[список полей ключа]_pk</li><li>Внешние ключи — [название таблицы]_[список полей ключа]_pk</li></ul><p>Пример, сейчас таблица создается так:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">CREATE TABLE Paragrafoj - notoj</span>
<span class="line">(</span>
<span class="line">    Paragrafo   uuid        NOT NULL,</span>
<span class="line">    Aŭtora      bool        NOT NULL,</span>
<span class="line">    Kodo_de_Div text        NOT NULL,</span>
<span class="line">    Uzanto      varchar(64) NOT NULL DEFAULT user,</span>
<span class="line">    Tempo       timestamptz NOT NULL DEFAULT now(),</span>
<span class="line">    Fonto       uuid        NOT NULL,</span>
<span class="line">    CONSTRAINT Paragrafoj_notoj_Paragrafoj_FK FOREIGN KEY (Paragrafo) REFERENCES Paragrafoj (Kodo),</span>
<span class="line">    CONSTRAINT Paragrafoj_notoj_Paragrafoj_FK1 FOREIGN KEY (Fonto) REFERENCES Paragrafoj (Kodo)</span>
<span class="line">);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>А так в соответствии с этим правилом:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">CREATE TABLE paragrafo_noto</span>
<span class="line">(</span>
<span class="line">    paragrafo   uuid        NOT NULL,</span>
<span class="line">    aŭtora      bool        NOT NULL,</span>
<span class="line">    kodo_de_div text        NOT NULL,</span>
<span class="line">    uzanto      varchar(64) NOT NULL DEFAULT user,</span>
<span class="line">    tempo       timestamptz NOT NULL DEFAULT now(),</span>
<span class="line">    fonto       uuid        NOT NULL,</span>
<span class="line">    CONSTRAINT paragrafo_noto_paragrafo_fk FOREIGN KEY (paragrafo) REFERENCES paragrafo (kodo),</span>
<span class="line">    CONSTRAINT paragrafo_noto_fonto_fk FOREIGN KEY (fonto) REFERENCES paragrafo (kodo)</span>
<span class="line">);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5. <strong>Ко всем таблицам и к каждому полю таблицы</strong> должны быть обязательные комментарии на Эсперанто. Для полей с внешними ключами рекомендовано указание таблицы на которую ссылается поле.</p><p>Комментарии позволяют быстрее разбираться в схеме и будут способствовать изучению языка.</p><p>Пример добавления комментариев:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">COMMENT ON TABLE public.lingvo IS &#39;Listo de lingvoj&#39;;</span>
<span class="line"></span>
<span class="line">COMMENT ON COLUMN public.lingvo.nomo_originala IS &#39;Nomo en originala lingvo&#39;;</span>
<span class="line">COMMENT ON COLUMN public.lingvo.nomo IS &#39;Nomo en Esperanto&#39;;</span>
<span class="line">COMMENT ON COLUMN public.lingvo.familio IS &#39;Lingva familio, ligo al lingva_familio (kodo)&#39;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>6. Сейчас для таблиц используется схема <code>public</code>, эта схема применяется по умолчанию в PG, если схема явно не указано. При развитии базы данных может быть удобно разделить таблицы на несколько схем. В отдельную схему часто помещают нередактируемые таблицы-справочники (обычно их называют нормативно-справочная информация): справочник языков, справочник стран и тому подобные. Так же в отдельную схему могут быть выделены таблицы не относящиеся напрямую к текстологии но необходимые для работы программы: таблица пользователей, таблица прав доступа и подобные. Разделение таблиц на схемы упрощает понимание общей структуры базы данных и последующее администрирование.</p><p>7. Кроме самой схемы, полезно было бы полноценное текстовое описание схемы. Вероятно, так же на Эсперанто. Многие тонкие моменты, например, то каким способом храниться разрыв страницы внутри абзаца, затруднительно описать в комментариях к полям. По сути, нужна полноценная документация. В этой документации так же могут находится примеры запросов (<code>select</code>) с комментариями.</p><h2 id="_2-использование-идентификаторов-из-wikidata" tabindex="-1"><a class="header-anchor" href="#_2-использование-идентификаторов-из-wikidata"><span>2. Использование идентификаторов из Wikidata</span></a></h2><p>Для объединения разных баз данных потребуется наличие одинаковых идентификаторов для авторов, работ и, возможно, каких-то ещё. Эта проблема похожа на ту которая решена справочником языков, чтобы каждая группа не делала свой справочник, используется международный стандарт <a href="https://ru.wikipedia.org/wiki/ISO_639" target="_blank" rel="noopener noreferrer">ISO-639</a>. Такой же подход можно попробовать использовать для людей и работ. Один из вариантов откуда взять такой справочник — <a href="https://www.wikidata.org" target="_blank" rel="noopener noreferrer">wikidata.org</a>. Каждый человек и работа в wikidata имеет свой идентификатор, например:</p><ul><li><a href="https://www.wikidata.org/wiki/Q1394" target="_blank" rel="noopener noreferrer">Q1394</a> — Vladimir Lenin</li><li><a href="https://www.wikidata.org/wiki/Q1382977" target="_blank" rel="noopener noreferrer">Q1382977</a> — Evald Ilyenkov</li><li><a href="https://www.wikidata.org/wiki/Q192331" target="_blank" rel="noopener noreferrer">Q192331</a> — Nikolay Chernyshevsky</li><li><a href="https://www.wikidata.org/wiki/Q946877" target="_blank" rel="noopener noreferrer">Q946877</a> — «Что делать?» В. Ленина</li><li><a href="https://www.wikidata.org/wiki/Q2251772" target="_blank" rel="noopener noreferrer">Q2251772</a> — «Что делать?» Н. Чернышевского</li></ul><p>Для использования идентификатора можно добавить в таблицы авторов и работ необязательные поля:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">CREATE TABLE &quot;Aŭtoroj&quot;</span>
<span class="line">(</span>
<span class="line">    &quot;Kodo&quot;                    uuid        NOT NULL DEFAULT uuid_generate_v4(),</span>
<span class="line">    &quot;Nomo originalo - lingvo&quot; varchar(3)  NOT NULL,</span>
<span class="line">    ...</span>
<span class="line">    wikidata_kodo int  NULL,</span>
<span class="line">);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Второй, более сложный, но и более универсальный способ — сделать отдельную таблицу для сопоставлений внутренних идентификаторов авторов и работ с внешними идентификаторами. Это позволит вести сопоставление не только с wikidata, но и другими общедоступными справочниками. Структура таблиц может быть следующая.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">CREATE TABLE ekstera_sistemo</span>
<span class="line">(</span>
<span class="line">    kodo   uuid          NOT NULL DEFAULT uuid_generate_v4()  primary key,</span>
<span class="line">    nomo   varchar(100)  NOT NULL,</span>
<span class="line">    ligilo varchar(100)  NOT NULL</span>
<span class="line">);</span>
<span class="line"></span>
<span class="line">COMMENT ON TABLE public.ekstera_sistemo IS &#39;Listo de eksteraj sistemoj&#39;;</span>
<span class="line">COMMENT ON COLUMN public.ekstera_sistemo.kodo IS &#39;Kodo de ekstera sistemo&#39;;</span>
<span class="line">COMMENT ON COLUMN public.ekstera_sistemo.nomo IS &#39;Nomo de ekstera sistemo&#39;;</span>
<span class="line">COMMENT ON COLUMN public.ekstera_sistemo.ligilo IS &#39;Ligo al ekstera sistemo&#39;;</span>
<span class="line"></span>
<span class="line">INSERT INTO ekstera_sistemo(nomo, ligilo) VALUES(&#39;Wikidata&#39;, &#39;https://www.wikidata.org/&#39;);</span>
<span class="line"></span>
<span class="line">CREATE TABLE interna_objekto</span>
<span class="line">(</span>
<span class="line">    kodo   uuid          NOT NULL DEFAULT uuid_generate_v4() primary key,</span>
<span class="line">    tablo varchar(100)   NOT NULL</span>
<span class="line">);</span>
<span class="line"></span>
<span class="line">COMMENT ON TABLE public.interna_objekto IS &#39;Listo de internaj objektoj&#39;;</span>
<span class="line">COMMENT ON COLUMN public.interna_objekto.kodo IS &#39;Kodo de interna objekto&#39;;</span>
<span class="line">COMMENT ON COLUMN public.interna_objekto.tablo IS &#39;Tablo de interna objekto&#39;;</span>
<span class="line"></span>
<span class="line">INSERT INTO interna_objekto(tablo) VALUES(&#39;aŭtoro&#39;);</span>
<span class="line"></span>
<span class="line">CREATE TABLE kongrua_kodo</span>
<span class="line">(</span>
<span class="line">    interna_kodo uuid NOT NULL,</span>
<span class="line">    interna_objekto uuid NOT NULL,</span>
<span class="line">    ekstera_kodo uuid NOT NULL,</span>
<span class="line">    ekstera_sistemo uuid NOT NULL,</span>
<span class="line">    CONSTRAINT kongrua_kodo_interna_objekto FOREIGN KEY (interna_objekto) REFERENCES interna_objekto (kodo),</span>
<span class="line">    CONSTRAINT kongrua_kodo_ekstera_sistemo FOREIGN KEY (ekstera_sistemo) REFERENCES ekstera_sistemo (kodo)</span>
<span class="line">);</span>
<span class="line"></span>
<span class="line">COMMENT ...</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Содержимое Wikidata наполняется сообществом, поэтому добавить туда новых авторов и работы может любой человек.</p><h2 id="_3-использование-html-и-css" tabindex="-1"><a class="header-anchor" href="#_3-использование-html-и-css"><span>3. Использование html и css</span></a></h2><p>Сейчас схема подразумевает использование элементов основанных на html в таблицах <code>Dizajnoj</code>, <code>Dizajnoj - elementoj</code>, <code>Paragrafoj</code>, в полях <code>Klaso</code> и <code>Etikedo</code>, а, возможно, и в <code>Interno</code>. Следующие цитаты из <a href="https://comtext.space/%D1%87%D1%82%D0%BE_%D0%BD%D0%B5_%D1%82%D0%B0%D0%BA_%D1%81_%D1%82%D0%B5%D0%BA%D1%81%D1%82%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D0%B5%D0%B9_%D0%B8_%D0%BA%D0%B0%D0%BA_%D0%B8%D1%81%D0%BF%D1%80%D0%B0%D0%B2%D0%B8%D1%82%D1%8C_%D1%81%D0%B8%D1%82%D1%83%D0%B0%D1%86%D0%B8%D1%8E.html" target="_blank" rel="noopener noreferrer">Что не так с текстологией и как исправить ситуацию</a>:</p><blockquote><p>Абзац имеет собственный код(&quot;Kodo&quot;), принадлежность к работе (код другой таблицы в &quot;Laboro&quot;), маркировку для гипертекста &quot;Etikedo&quot;, класс для гипертекста &quot;Klaso&quot; и, главное, текстовое содержание &quot;Interno&quot;</p></blockquote><blockquote><p>Если же издатели отметили все абзацы цитат шрифтом несколько меньшего размера, но авторская рукопись не даёт примеров такого приёма, то абзацы цитат подлежат пометке «», что даст в таблице абзацев Etikedo = p Klaso = Citato. В этом случае правила оформления цитат должны быть прописаны в двух таблицах, название которых включает «Dizajnoj». В одной таблице указывается применимость правил (элемент p и классом Citato), в другой его код связывается с отдельными правилами оформления.</p></blockquote><p>Стоит рассмотреть возможность отказаться от наследия связанного с html, в частности поля <code>Klaso</code> и <code>Etikedo</code> можно объединить в одно поле. В целом, лучше ориентироваться на логическую разметку, исключить в данных разметку связанную с форматированием. В этом смысле, таблица Dizajnoj может остаться, но получить другое назначение, например &quot;вид параграфа&quot; или &quot;тип параграфа&quot;, которые могут означать обычный абзац, заголовок, изображение и др.</p><p>Внутри <code>Interno</code> тоже лучше исключить теги html, а использовать описанный язык облегченной разметки, например, для выделения жирным и курсивом. Детальнее преимущества такого подхода описаны в статье <a href="https://research.comtext.space/%D1%82%D0%B5%D1%85%D0%BD%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5-%D0%B0%D1%81%D0%BF%D0%B5%D0%BA%D1%82%D1%8B-%D1%82%D0%B5%D0%BA%D1%81%D1%82%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D0%B8.html" target="_blank" rel="noopener noreferrer">Технические аспекты цифровой текстологии</a>.</p><p>В некоторых случаях трудно разделить разметку на логическую и форматирование, например, то же выделение жирным шрифтом это одновременно и первое и второе. Но в целом, все равно лучше отказываться от html в сторону продуманной системы разметки для книг.</p><h2 id="_4-версионирование-параграфов" tabindex="-1"><a class="header-anchor" href="#_4-версионирование-параграфов"><span>4. Версионирование параграфов</span></a></h2><p>Полезна была бы возможность хранения предыдущих версий текста параграфа. Это может быть нужно для проверки работы участников при коллективной вычитке. Так работает Wikisource, любой участник может посмотреть всю историю изменений текста на странице: кто, что и когда изменял (<a href="https://ru.wikisource.org/w/index.php?title=%D0%A1%D1%82%D1%80%D0%B0%D0%BD%D0%B8%D1%86%D0%B0:%D0%94%D0%B0%D1%80%D0%B2%D0%B8%D0%BD_-_%D0%9E_%D0%BF%D1%80%D0%BE%D0%B8%D1%81%D1%85%D0%BE%D0%B6%D0%B4%D0%B5%D0%BD%D0%B8%D0%B8_%D0%B2%D0%B8%D0%B4%D0%BE%D0%B2,_1864.djvu/71&amp;action=history" target="_blank" rel="noopener noreferrer">пример</a>). Без этого затруднительно проверить правильность работы когда к вычитке подключается много участников.</p><p>Способа хранения версий параграфов в текущей схеме найти не удалось. Скорее всего, понадобится ещё одна таблица с двумя ссылками на строку в <code>Paragrafoj</code>: одна на более новую, другая на более старую. Недостаток в том, что идентификатор (<code>kodo</code>) абзаца будет меняться, а это может нарушить связь с переводами. Возможно, для решения проблему может быть полезно хранение хеша текста параграфа в <code>Paragrafoj</code>.</p><h2 id="_5-структура-текста" tabindex="-1"><a class="header-anchor" href="#_5-структура-текста"><span>5. Структура текста</span></a></h2><p>Сейчас текст представлен в виде линейной последовательности параграфов (таблицы <code>Paragrafoj</code> и <code>Paragrafoj - ĉenoj</code>), кроме того могут быть связанные линейные последовательности примечаний (таблица <code>Paragrafoj - notoj</code>).</p><p>Под параграфом подразумевается так же цитаты, заголовки и другие элементы, поэтому далее будем использовать слово блок, в смысле блока текста или раздела, части документа.</p><blockquote><p>В общем случае абзацы должны быть пронумерованы и каким-то образом должен быть помечен тип абзаца — цитата, авторский текст, подпись под иллюстрацией, заголовок главы, заголовок работы и прочее. (<a href="https://comtext.space/%D1%87%D1%82%D0%BE_%D0%BD%D0%B5_%D1%82%D0%B0%D0%BA_%D1%81_%D1%82%D0%B5%D0%BA%D1%81%D1%82%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D0%B5%D0%B9_%D0%B8_%D0%BA%D0%B0%D0%BA_%D0%B8%D1%81%D0%BF%D1%80%D0%B0%D0%B2%D0%B8%D1%82%D1%8C_%D1%81%D0%B8%D1%82%D1%83%D0%B0%D1%86%D0%B8%D1%8E.html" target="_blank" rel="noopener noreferrer">Что не так с текстологией и как исправить ситуацию</a>)</p></blockquote><p>Получается такая структура:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">Блок</span>
<span class="line">|</span>
<span class="line">Блок ---- Примечание1</span>
<span class="line">|</span>
<span class="line">Блок ---- Примечание2</span>
<span class="line">|         |      </span>
<span class="line">Блок      Примечание2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Такая структура не может точно отразить логическую структуру текста. Текст представляет собой набор вложенных в друг друга структур. Например, одна цитата может содержать в себе три параграфа и это именно не три отдельных параграфа-цитаты, а одна цитата состоящая из трёх параграфов. Один из параграфов этой цитаты может содержать примечание, которое тоже состоит из нескольких параграфов и включает в себя ещё одну цитату из нескольких параграфов. Кроме того заголовки тоже образуют вложенную структуру, а не плоскую.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">Заголовок1</span>
<span class="line">|</span>
<span class="line">|------ Подзаголовок1</span>
<span class="line">|      |---------------- Цитата</span>
<span class="line">|                        |---------- Параграф </span>
<span class="line">|------ Подзаголовок2    |---------- Параграф</span>
<span class="line">        |------ Параграф</span>
<span class="line">        |------ Цитата       </span>
<span class="line">                |------ Параграф</span>
<span class="line">                |------ Параграф</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>При таком подходе нет необходимости выделять примечание как что-то отличное от других блоков текста: первый параграф примечания может быть привязан к блоку откуда идёт сноска. Определение того что это сноска может происходить через тип блока, так же как для заголовков и изображений. Отпадает необходимость в таблице <code>Paragrafoj - notoj</code>. В частности, позволяет упростить поиск первого абзаца:</p><blockquote><p>От первых абзацев многоабзацных примечаний первый абзац авторского текста отличается тем, что для него невозможно найти (в таблице абзацев-примечаний) исходного абзаца. То есть первый абзац авторского текста не является примечанием для какого-либо другого абзаца. (<a href="https://comtext.space/%D1%87%D1%82%D0%BE_%D0%BD%D0%B5_%D1%82%D0%B0%D0%BA_%D1%81_%D1%82%D0%B5%D0%BA%D1%81%D1%82%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D0%B5%D0%B9_%D0%B8_%D0%BA%D0%B0%D0%BA_%D0%B8%D1%81%D0%BF%D1%80%D0%B0%D0%B2%D0%B8%D1%82%D1%8C_%D1%81%D0%B8%D1%82%D1%83%D0%B0%D1%86%D0%B8%D1%8E.html" target="_blank" rel="noopener noreferrer">Что не так с текстологией и как исправить ситуацию</a>)</p></blockquote><p>С одной стороны, такой подход делает базу данных более универсальной, позволяет точнее отразить структуру текста в виде блоков текста связанных иерархически. У каждого блока есть один родительский и несколько дочерних элементов. Каждый блок имеет определенный тип (цитата, примечание, изображение и т. д.) и дополнительную специфическую информацию (автор цитаты, автор примечания и т. д.).</p><p>С другой стороны, такой подход усложняет структуру базы данных и точно не ясно требуется ли это для практических задач.</p>`,57))])}const b=d(c,[["render",D]]),B=JSON.parse('{"path":"/fzr-review.html","title":"Заметки по поводу схемы ФЗР","lang":"ru-RU","frontmatter":{},"git":{"updatedTime":1687895680000,"contributors":[{"name":"KonstantinSh","username":"KonstantinSh","email":"Kverde@yandex.ru","commits":5,"url":"https://github.com/KonstantinSh"}],"changelog":[{"hash":"224617fa944c1fb6ae5fef784af340f15acb902e","time":1687895680000,"email":"Kverde@yandex.ru","author":"KonstantinSh","message":"Update fzr-review.md"},{"hash":"77cb8343d94b768f4c9bca0f0143cbae46bcfe1d","time":1674296496000,"email":"Kverde@yandex.ru","author":"KonstantinSh","message":"Update fzr-review.md"},{"hash":"e722ee6dec2d3918d4e3d7ed4f8827508c54736f","time":1674294251000,"email":"Kverde@yandex.ru","author":"KonstantinSh","message":"Update fzr-review.md"},{"hash":"3219a0b55fb2c3baf3ab991c4c62962760e6db5a","time":1674294192000,"email":"Kverde@yandex.ru","author":"KonstantinSh","message":"Update fzr-review.md"},{"hash":"2be0a15f31f97921a0cd53ebe3fae0bbb2fba5f1","time":1674293805000,"email":"Kverde@yandex.ru","author":"KonstantinSh","message":"Create fzr-review.md"}]},"filePathRelative":"fzr-review.md"}');export{b as comp,B as data};
